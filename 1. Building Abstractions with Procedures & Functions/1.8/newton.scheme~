#lang sicp
(define (average x y)
  ( / (+ x y) 2))

(define (improve guess x)
  (average guess (/ x guess)))

(define (square x)  (* x x))

(define (relative-error estimate x)
  (/ (abs (- (square estimate) x)) x)
  )

(define (good-enough? guess x)
  (< (relative-error guess x) 0.00000000001))

(define (sqrt-iter guess x)
  (if (good-enough? guess x)
      guess
      (sqrt-iter (improve guess x) x)))

(define (sqrt x)
  (sqrt-iter 1.0 x))

(sqrt 0.00000000123456)
(sqrt 123456789012345)
